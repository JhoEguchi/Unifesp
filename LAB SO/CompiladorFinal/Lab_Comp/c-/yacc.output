Terminals unused in grammar

    ERROR


Rules useless in parser due to conflicts

   22 local_decl: %empty

   25 stmt_list: %empty


State 31 conflicts: 10 shift/reduce, 9 reduce/reduce
State 46 conflicts: 9 shift/reduce
State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: decl_lista

    2 decl_lista: decl_lista decl
    3           | decl

    4 decl: var_decl
    5     | fun_decl

    6 var_decl: INT id PV
    7         | INT id ABRCO num FECCO PV

    8 fun_decl: INT id ABRP params FECP composto_decl
    9         | VOID id ABRP params FECP composto_decl

   10 params: param_lista
   11       | VOID

   12 param_lista: param_lista VIR param
   13            | param

   14 param: INT id
   15      | INT id ABRCO FECCO

   16 composto_decl: ABRC local_decl stmt_list FECC
   17              | ABRC local_decl FECC
   18              | ABRC stmt_list FECC
   19              | ABRC FECC

   20 local_decl: local_decl var_decl
   21           | var_decl
   22           | %empty

   23 stmt_list: stmt_list stmt
   24          | stmt
   25          | %empty

   26 stmt: exp_decl
   27     | composto_decl
   28     | sel_decl
   29     | it_decl
   30     | retorno_decl

   31 exp_decl: exp PV
   32         | PV

   33 sel_decl: IF ABRP exp FECP stmt
   34         | IF ABRP exp FECP stmt ELSE stmt

   35 it_decl: WHILE ABRP exp FECP stmt

   36 retorno_decl: RETURN PV
   37             | RETURN exp PV

   38 exp: var RECEBE exp
   39    | simples_exp

   40 var: id
   41    | id ABRCO exp FECCO

   42 simples_exp: soma_exp rel soma_exp
   43            | soma_exp

   44 rel: MENOR
   45    | MENORIGUAL
   46    | MAIOR
   47    | MAIORIGUAL
   48    | IGUAL
   49    | DIF

   50 soma_exp: soma_exp sum term
   51         | term

   52 sum: MAIS
   53    | MENOS

   54 term: term mult fator
   55     | fator

   56 mult: MULT
   57     | DIV

   58 fator: ABRP exp FECP
   59      | var
   60      | atv
   61      | num

   62 atv: id ABRP args FECP

   63 args: arg_lista
   64     | %empty

   65 arg_lista: arg_lista VIR exp
   66          | exp

   67 num: NUM

   68 id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ELSE (258) 34
    IF (259) 33 34
    INT (260) 6 7 8 14 15
    RETURN (261) 36 37
    VOID (262) 9 11
    WHILE (263) 35
    MAIS (264) 52
    MENOS (265) 53
    MULT (266) 56
    DIV (267) 57
    MENOR (268) 44
    MENORIGUAL (269) 45
    MAIOR (270) 46
    MAIORIGUAL (271) 47
    IGUAL (272) 48
    DIF (273) 49
    PV (274) 6 7 31 32 36 37
    VIR (275) 12 65
    ABRP (276) 8 9 33 34 35 58 62
    FECP (277) 8 9 33 34 35 58 62
    ABRCO (278) 7 15 41
    FECCO (279) 7 15 41
    ABRC (280) 16 17 18 19
    FECC (281) 16 17 18 19
    RECEBE (282) 38
    ID (283) 68
    NUM (284) 67
    ERROR (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    programa (32)
        on left: 1
        on right: 0
    decl_lista (33)
        on left: 2 3
        on right: 1 2
    decl (34)
        on left: 4 5
        on right: 2 3
    var_decl (35)
        on left: 6 7
        on right: 4 20 21
    fun_decl (36)
        on left: 8 9
        on right: 5
    params (37)
        on left: 10 11
        on right: 8 9
    param_lista (38)
        on left: 12 13
        on right: 10 12
    param (39)
        on left: 14 15
        on right: 12 13
    composto_decl (40)
        on left: 16 17 18 19
        on right: 8 9 27
    local_decl (41)
        on left: 20 21 22
        on right: 16 17 20
    stmt_list (42)
        on left: 23 24 25
        on right: 16 18 23
    stmt (43)
        on left: 26 27 28 29 30
        on right: 23 24 33 34 35
    exp_decl (44)
        on left: 31 32
        on right: 26
    sel_decl (45)
        on left: 33 34
        on right: 28
    it_decl (46)
        on left: 35
        on right: 29
    retorno_decl (47)
        on left: 36 37
        on right: 30
    exp (48)
        on left: 38 39
        on right: 31 33 34 35 37 38 41 58 65 66
    var (49)
        on left: 40 41
        on right: 38 59
    simples_exp (50)
        on left: 42 43
        on right: 39
    rel (51)
        on left: 44 45 46 47 48 49
        on right: 42
    soma_exp (52)
        on left: 50 51
        on right: 42 43 50
    sum (53)
        on left: 52 53
        on right: 50
    term (54)
        on left: 54 55
        on right: 50 51 54
    mult (55)
        on left: 56 57
        on right: 54
    fator (56)
        on left: 58 59 60 61
        on right: 54 55
    atv (57)
        on left: 62
        on right: 60
    args (58)
        on left: 63 64
        on right: 62
    arg_lista (59)
        on left: 65 66
        on right: 63 65
    num (60)
        on left: 67
        on right: 7 61
    id (61)
        on left: 68
        on right: 6 7 8 9 14 15 40 41 62


State 0

    0 $accept: . programa $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    programa    go to state 3
    decl_lista  go to state 4
    decl        go to state 5
    var_decl    go to state 6
    fun_decl    go to state 7


State 1

    6 var_decl: INT . id PV
    7         | INT . id ABRCO num FECCO PV
    8 fun_decl: INT . id ABRP params FECP composto_decl

    ID  shift, and go to state 8

    id  go to state 9


State 2

    9 fun_decl: VOID . id ABRP params FECP composto_decl

    ID  shift, and go to state 8

    id  go to state 10


State 3

    0 $accept: programa . $end

    $end  shift, and go to state 11


State 4

    1 programa: decl_lista .
    2 decl_lista: decl_lista . decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (programa)

    decl      go to state 12
    var_decl  go to state 6
    fun_decl  go to state 7


State 5

    3 decl_lista: decl .

    $default  reduce using rule 3 (decl_lista)


State 6

    4 decl: var_decl .

    $default  reduce using rule 4 (decl)


State 7

    5 decl: fun_decl .

    $default  reduce using rule 5 (decl)


State 8

   68 id: ID .

    $default  reduce using rule 68 (id)


State 9

    6 var_decl: INT id . PV
    7         | INT id . ABRCO num FECCO PV
    8 fun_decl: INT id . ABRP params FECP composto_decl

    PV     shift, and go to state 13
    ABRP   shift, and go to state 14
    ABRCO  shift, and go to state 15


State 10

    9 fun_decl: VOID id . ABRP params FECP composto_decl

    ABRP  shift, and go to state 16


State 11

    0 $accept: programa $end .

    $default  accept


State 12

    2 decl_lista: decl_lista decl .

    $default  reduce using rule 2 (decl_lista)


State 13

    6 var_decl: INT id PV .

    $default  reduce using rule 6 (var_decl)


State 14

    8 fun_decl: INT id ABRP . params FECP composto_decl

    INT   shift, and go to state 17
    VOID  shift, and go to state 18

    params       go to state 19
    param_lista  go to state 20
    param        go to state 21


State 15

    7 var_decl: INT id ABRCO . num FECCO PV

    NUM  shift, and go to state 22

    num  go to state 23


State 16

    9 fun_decl: VOID id ABRP . params FECP composto_decl

    INT   shift, and go to state 17
    VOID  shift, and go to state 18

    params       go to state 24
    param_lista  go to state 20
    param        go to state 21


State 17

   14 param: INT . id
   15      | INT . id ABRCO FECCO

    ID  shift, and go to state 8

    id  go to state 25


State 18

   11 params: VOID .

    $default  reduce using rule 11 (params)


State 19

    8 fun_decl: INT id ABRP params . FECP composto_decl

    FECP  shift, and go to state 26


State 20

   10 params: param_lista .
   12 param_lista: param_lista . VIR param

    VIR  shift, and go to state 27

    $default  reduce using rule 10 (params)


State 21

   13 param_lista: param .

    $default  reduce using rule 13 (param_lista)


State 22

   67 num: NUM .

    $default  reduce using rule 67 (num)


State 23

    7 var_decl: INT id ABRCO num . FECCO PV

    FECCO  shift, and go to state 28


State 24

    9 fun_decl: VOID id ABRP params . FECP composto_decl

    FECP  shift, and go to state 29


State 25

   14 param: INT id .
   15      | INT id . ABRCO FECCO

    ABRCO  shift, and go to state 30

    $default  reduce using rule 14 (param)


State 26

    8 fun_decl: INT id ABRP params FECP . composto_decl

    ABRC  shift, and go to state 31

    composto_decl  go to state 32


State 27

   12 param_lista: param_lista VIR . param

    INT  shift, and go to state 17

    param  go to state 33


State 28

    7 var_decl: INT id ABRCO num FECCO . PV

    PV  shift, and go to state 34


State 29

    9 fun_decl: VOID id ABRP params FECP . composto_decl

    ABRC  shift, and go to state 31

    composto_decl  go to state 35


State 30

   15 param: INT id ABRCO . FECCO

    FECCO  shift, and go to state 36


State 31

   16 composto_decl: ABRC . local_decl stmt_list FECC
   17              | ABRC . local_decl FECC
   18              | ABRC . stmt_list FECC
   19              | ABRC . FECC

    IF      shift, and go to state 37
    INT     shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    PV      shift, and go to state 41
    ABRP    shift, and go to state 42
    ABRC    shift, and go to state 31
    FECC    shift, and go to state 43
    ID      shift, and go to state 8
    NUM     shift, and go to state 22

    IF      [reduce using rule 22 (local_decl)]
    IF      [reduce using rule 25 (stmt_list)]
    INT     [reduce using rule 22 (local_decl)]
    RETURN  [reduce using rule 22 (local_decl)]
    RETURN  [reduce using rule 25 (stmt_list)]
    WHILE   [reduce using rule 22 (local_decl)]
    WHILE   [reduce using rule 25 (stmt_list)]
    PV      [reduce using rule 22 (local_decl)]
    PV      [reduce using rule 25 (stmt_list)]
    ABRP    [reduce using rule 22 (local_decl)]
    ABRP    [reduce using rule 25 (stmt_list)]
    ABRC    [reduce using rule 22 (local_decl)]
    ABRC    [reduce using rule 25 (stmt_list)]
    FECC    [reduce using rule 22 (local_decl)]
    FECC    [reduce using rule 25 (stmt_list)]
    ID      [reduce using rule 22 (local_decl)]
    ID      [reduce using rule 25 (stmt_list)]
    NUM     [reduce using rule 22 (local_decl)]
    NUM     [reduce using rule 25 (stmt_list)]

    var_decl       go to state 44
    composto_decl  go to state 45
    local_decl     go to state 46
    stmt_list      go to state 47
    stmt           go to state 48
    exp_decl       go to state 49
    sel_decl       go to state 50
    it_decl        go to state 51
    retorno_decl   go to state 52
    exp            go to state 53
    var            go to state 54
    simples_exp    go to state 55
    soma_exp       go to state 56
    term           go to state 57
    fator          go to state 58
    atv            go to state 59
    num            go to state 60
    id             go to state 61


State 32

    8 fun_decl: INT id ABRP params FECP composto_decl .

    $default  reduce using rule 8 (fun_decl)


State 33

   12 param_lista: param_lista VIR param .

    $default  reduce using rule 12 (param_lista)


State 34

    7 var_decl: INT id ABRCO num FECCO PV .

    $default  reduce using rule 7 (var_decl)


State 35

    9 fun_decl: VOID id ABRP params FECP composto_decl .

    $default  reduce using rule 9 (fun_decl)


State 36

   15 param: INT id ABRCO FECCO .

    $default  reduce using rule 15 (param)


State 37

   33 sel_decl: IF . ABRP exp FECP stmt
   34         | IF . ABRP exp FECP stmt ELSE stmt

    ABRP  shift, and go to state 62


State 38

    6 var_decl: INT . id PV
    7         | INT . id ABRCO num FECCO PV

    ID  shift, and go to state 8

    id  go to state 63


State 39

   36 retorno_decl: RETURN . PV
   37             | RETURN . exp PV

    PV    shift, and go to state 64
    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    exp          go to state 65
    var          go to state 54
    simples_exp  go to state 55
    soma_exp     go to state 56
    term         go to state 57
    fator        go to state 58
    atv          go to state 59
    num          go to state 60
    id           go to state 61


State 40

   35 it_decl: WHILE . ABRP exp FECP stmt

    ABRP  shift, and go to state 66


State 41

   32 exp_decl: PV .

    $default  reduce using rule 32 (exp_decl)


State 42

   58 fator: ABRP . exp FECP

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    exp          go to state 67
    var          go to state 54
    simples_exp  go to state 55
    soma_exp     go to state 56
    term         go to state 57
    fator        go to state 58
    atv          go to state 59
    num          go to state 60
    id           go to state 61


State 43

   19 composto_decl: ABRC FECC .

    $default  reduce using rule 19 (composto_decl)


State 44

   21 local_decl: var_decl .

    $default  reduce using rule 21 (local_decl)


State 45

   27 stmt: composto_decl .

    $default  reduce using rule 27 (stmt)


State 46

   16 composto_decl: ABRC local_decl . stmt_list FECC
   17              | ABRC local_decl . FECC
   20 local_decl: local_decl . var_decl

    IF      shift, and go to state 37
    INT     shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    PV      shift, and go to state 41
    ABRP    shift, and go to state 42
    ABRC    shift, and go to state 31
    FECC    shift, and go to state 68
    ID      shift, and go to state 8
    NUM     shift, and go to state 22

    IF      [reduce using rule 25 (stmt_list)]
    RETURN  [reduce using rule 25 (stmt_list)]
    WHILE   [reduce using rule 25 (stmt_list)]
    PV      [reduce using rule 25 (stmt_list)]
    ABRP    [reduce using rule 25 (stmt_list)]
    ABRC    [reduce using rule 25 (stmt_list)]
    FECC    [reduce using rule 25 (stmt_list)]
    ID      [reduce using rule 25 (stmt_list)]
    NUM     [reduce using rule 25 (stmt_list)]

    var_decl       go to state 69
    composto_decl  go to state 45
    stmt_list      go to state 70
    stmt           go to state 48
    exp_decl       go to state 49
    sel_decl       go to state 50
    it_decl        go to state 51
    retorno_decl   go to state 52
    exp            go to state 53
    var            go to state 54
    simples_exp    go to state 55
    soma_exp       go to state 56
    term           go to state 57
    fator          go to state 58
    atv            go to state 59
    num            go to state 60
    id             go to state 61


State 47

   18 composto_decl: ABRC stmt_list . FECC
   23 stmt_list: stmt_list . stmt

    IF      shift, and go to state 37
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    PV      shift, and go to state 41
    ABRP    shift, and go to state 42
    ABRC    shift, and go to state 31
    FECC    shift, and go to state 71
    ID      shift, and go to state 8
    NUM     shift, and go to state 22

    composto_decl  go to state 45
    stmt           go to state 72
    exp_decl       go to state 49
    sel_decl       go to state 50
    it_decl        go to state 51
    retorno_decl   go to state 52
    exp            go to state 53
    var            go to state 54
    simples_exp    go to state 55
    soma_exp       go to state 56
    term           go to state 57
    fator          go to state 58
    atv            go to state 59
    num            go to state 60
    id             go to state 61


State 48

   24 stmt_list: stmt .

    $default  reduce using rule 24 (stmt_list)


State 49

   26 stmt: exp_decl .

    $default  reduce using rule 26 (stmt)


State 50

   28 stmt: sel_decl .

    $default  reduce using rule 28 (stmt)


State 51

   29 stmt: it_decl .

    $default  reduce using rule 29 (stmt)


State 52

   30 stmt: retorno_decl .

    $default  reduce using rule 30 (stmt)


State 53

   31 exp_decl: exp . PV

    PV  shift, and go to state 73


State 54

   38 exp: var . RECEBE exp
   59 fator: var .

    RECEBE  shift, and go to state 74

    $default  reduce using rule 59 (fator)


State 55

   39 exp: simples_exp .

    $default  reduce using rule 39 (exp)


State 56

   42 simples_exp: soma_exp . rel soma_exp
   43            | soma_exp .
   50 soma_exp: soma_exp . sum term

    MAIS        shift, and go to state 75
    MENOS       shift, and go to state 76
    MENOR       shift, and go to state 77
    MENORIGUAL  shift, and go to state 78
    MAIOR       shift, and go to state 79
    MAIORIGUAL  shift, and go to state 80
    IGUAL       shift, and go to state 81
    DIF         shift, and go to state 82

    $default  reduce using rule 43 (simples_exp)

    rel  go to state 83
    sum  go to state 84


State 57

   51 soma_exp: term .
   54 term: term . mult fator

    MULT  shift, and go to state 85
    DIV   shift, and go to state 86

    $default  reduce using rule 51 (soma_exp)

    mult  go to state 87


State 58

   55 term: fator .

    $default  reduce using rule 55 (term)


State 59

   60 fator: atv .

    $default  reduce using rule 60 (fator)


State 60

   61 fator: num .

    $default  reduce using rule 61 (fator)


State 61

   40 var: id .
   41    | id . ABRCO exp FECCO
   62 atv: id . ABRP args FECP

    ABRP   shift, and go to state 88
    ABRCO  shift, and go to state 89

    $default  reduce using rule 40 (var)


State 62

   33 sel_decl: IF ABRP . exp FECP stmt
   34         | IF ABRP . exp FECP stmt ELSE stmt

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    exp          go to state 90
    var          go to state 54
    simples_exp  go to state 55
    soma_exp     go to state 56
    term         go to state 57
    fator        go to state 58
    atv          go to state 59
    num          go to state 60
    id           go to state 61


State 63

    6 var_decl: INT id . PV
    7         | INT id . ABRCO num FECCO PV

    PV     shift, and go to state 13
    ABRCO  shift, and go to state 15


State 64

   36 retorno_decl: RETURN PV .

    $default  reduce using rule 36 (retorno_decl)


State 65

   37 retorno_decl: RETURN exp . PV

    PV  shift, and go to state 91


State 66

   35 it_decl: WHILE ABRP . exp FECP stmt

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    exp          go to state 92
    var          go to state 54
    simples_exp  go to state 55
    soma_exp     go to state 56
    term         go to state 57
    fator        go to state 58
    atv          go to state 59
    num          go to state 60
    id           go to state 61


State 67

   58 fator: ABRP exp . FECP

    FECP  shift, and go to state 93


State 68

   17 composto_decl: ABRC local_decl FECC .

    $default  reduce using rule 17 (composto_decl)


State 69

   20 local_decl: local_decl var_decl .

    $default  reduce using rule 20 (local_decl)


State 70

   16 composto_decl: ABRC local_decl stmt_list . FECC
   23 stmt_list: stmt_list . stmt

    IF      shift, and go to state 37
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    PV      shift, and go to state 41
    ABRP    shift, and go to state 42
    ABRC    shift, and go to state 31
    FECC    shift, and go to state 94
    ID      shift, and go to state 8
    NUM     shift, and go to state 22

    composto_decl  go to state 45
    stmt           go to state 72
    exp_decl       go to state 49
    sel_decl       go to state 50
    it_decl        go to state 51
    retorno_decl   go to state 52
    exp            go to state 53
    var            go to state 54
    simples_exp    go to state 55
    soma_exp       go to state 56
    term           go to state 57
    fator          go to state 58
    atv            go to state 59
    num            go to state 60
    id             go to state 61


State 71

   18 composto_decl: ABRC stmt_list FECC .

    $default  reduce using rule 18 (composto_decl)


State 72

   23 stmt_list: stmt_list stmt .

    $default  reduce using rule 23 (stmt_list)


State 73

   31 exp_decl: exp PV .

    $default  reduce using rule 31 (exp_decl)


State 74

   38 exp: var RECEBE . exp

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    exp          go to state 95
    var          go to state 54
    simples_exp  go to state 55
    soma_exp     go to state 56
    term         go to state 57
    fator        go to state 58
    atv          go to state 59
    num          go to state 60
    id           go to state 61


State 75

   52 sum: MAIS .

    $default  reduce using rule 52 (sum)


State 76

   53 sum: MENOS .

    $default  reduce using rule 53 (sum)


State 77

   44 rel: MENOR .

    $default  reduce using rule 44 (rel)


State 78

   45 rel: MENORIGUAL .

    $default  reduce using rule 45 (rel)


State 79

   46 rel: MAIOR .

    $default  reduce using rule 46 (rel)


State 80

   47 rel: MAIORIGUAL .

    $default  reduce using rule 47 (rel)


State 81

   48 rel: IGUAL .

    $default  reduce using rule 48 (rel)


State 82

   49 rel: DIF .

    $default  reduce using rule 49 (rel)


State 83

   42 simples_exp: soma_exp rel . soma_exp

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    var       go to state 96
    soma_exp  go to state 97
    term      go to state 57
    fator     go to state 58
    atv       go to state 59
    num       go to state 60
    id        go to state 61


State 84

   50 soma_exp: soma_exp sum . term

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    var    go to state 96
    term   go to state 98
    fator  go to state 58
    atv    go to state 59
    num    go to state 60
    id     go to state 61


State 85

   56 mult: MULT .

    $default  reduce using rule 56 (mult)


State 86

   57 mult: DIV .

    $default  reduce using rule 57 (mult)


State 87

   54 term: term mult . fator

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    var    go to state 96
    fator  go to state 99
    atv    go to state 59
    num    go to state 60
    id     go to state 61


State 88

   62 atv: id ABRP . args FECP

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    $default  reduce using rule 64 (args)

    exp          go to state 100
    var          go to state 54
    simples_exp  go to state 55
    soma_exp     go to state 56
    term         go to state 57
    fator        go to state 58
    atv          go to state 59
    args         go to state 101
    arg_lista    go to state 102
    num          go to state 60
    id           go to state 61


State 89

   41 var: id ABRCO . exp FECCO

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    exp          go to state 103
    var          go to state 54
    simples_exp  go to state 55
    soma_exp     go to state 56
    term         go to state 57
    fator        go to state 58
    atv          go to state 59
    num          go to state 60
    id           go to state 61


State 90

   33 sel_decl: IF ABRP exp . FECP stmt
   34         | IF ABRP exp . FECP stmt ELSE stmt

    FECP  shift, and go to state 104


State 91

   37 retorno_decl: RETURN exp PV .

    $default  reduce using rule 37 (retorno_decl)


State 92

   35 it_decl: WHILE ABRP exp . FECP stmt

    FECP  shift, and go to state 105


State 93

   58 fator: ABRP exp FECP .

    $default  reduce using rule 58 (fator)


State 94

   16 composto_decl: ABRC local_decl stmt_list FECC .

    $default  reduce using rule 16 (composto_decl)


State 95

   38 exp: var RECEBE exp .

    $default  reduce using rule 38 (exp)


State 96

   59 fator: var .

    $default  reduce using rule 59 (fator)


State 97

   42 simples_exp: soma_exp rel soma_exp .
   50 soma_exp: soma_exp . sum term

    MAIS   shift, and go to state 75
    MENOS  shift, and go to state 76

    $default  reduce using rule 42 (simples_exp)

    sum  go to state 84


State 98

   50 soma_exp: soma_exp sum term .
   54 term: term . mult fator

    MULT  shift, and go to state 85
    DIV   shift, and go to state 86

    $default  reduce using rule 50 (soma_exp)

    mult  go to state 87


State 99

   54 term: term mult fator .

    $default  reduce using rule 54 (term)


State 100

   66 arg_lista: exp .

    $default  reduce using rule 66 (arg_lista)


State 101

   62 atv: id ABRP args . FECP

    FECP  shift, and go to state 106


State 102

   63 args: arg_lista .
   65 arg_lista: arg_lista . VIR exp

    VIR  shift, and go to state 107

    $default  reduce using rule 63 (args)


State 103

   41 var: id ABRCO exp . FECCO

    FECCO  shift, and go to state 108


State 104

   33 sel_decl: IF ABRP exp FECP . stmt
   34         | IF ABRP exp FECP . stmt ELSE stmt

    IF      shift, and go to state 37
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    PV      shift, and go to state 41
    ABRP    shift, and go to state 42
    ABRC    shift, and go to state 31
    ID      shift, and go to state 8
    NUM     shift, and go to state 22

    composto_decl  go to state 45
    stmt           go to state 109
    exp_decl       go to state 49
    sel_decl       go to state 50
    it_decl        go to state 51
    retorno_decl   go to state 52
    exp            go to state 53
    var            go to state 54
    simples_exp    go to state 55
    soma_exp       go to state 56
    term           go to state 57
    fator          go to state 58
    atv            go to state 59
    num            go to state 60
    id             go to state 61


State 105

   35 it_decl: WHILE ABRP exp FECP . stmt

    IF      shift, and go to state 37
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    PV      shift, and go to state 41
    ABRP    shift, and go to state 42
    ABRC    shift, and go to state 31
    ID      shift, and go to state 8
    NUM     shift, and go to state 22

    composto_decl  go to state 45
    stmt           go to state 110
    exp_decl       go to state 49
    sel_decl       go to state 50
    it_decl        go to state 51
    retorno_decl   go to state 52
    exp            go to state 53
    var            go to state 54
    simples_exp    go to state 55
    soma_exp       go to state 56
    term           go to state 57
    fator          go to state 58
    atv            go to state 59
    num            go to state 60
    id             go to state 61


State 106

   62 atv: id ABRP args FECP .

    $default  reduce using rule 62 (atv)


State 107

   65 arg_lista: arg_lista VIR . exp

    ABRP  shift, and go to state 42
    ID    shift, and go to state 8
    NUM   shift, and go to state 22

    exp          go to state 111
    var          go to state 54
    simples_exp  go to state 55
    soma_exp     go to state 56
    term         go to state 57
    fator        go to state 58
    atv          go to state 59
    num          go to state 60
    id           go to state 61


State 108

   41 var: id ABRCO exp FECCO .

    $default  reduce using rule 41 (var)


State 109

   33 sel_decl: IF ABRP exp FECP stmt .
   34         | IF ABRP exp FECP stmt . ELSE stmt

    ELSE  shift, and go to state 112

    ELSE      [reduce using rule 33 (sel_decl)]
    $default  reduce using rule 33 (sel_decl)


State 110

   35 it_decl: WHILE ABRP exp FECP stmt .

    $default  reduce using rule 35 (it_decl)


State 111

   65 arg_lista: arg_lista VIR exp .

    $default  reduce using rule 65 (arg_lista)


State 112

   34 sel_decl: IF ABRP exp FECP stmt ELSE . stmt

    IF      shift, and go to state 37
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    PV      shift, and go to state 41
    ABRP    shift, and go to state 42
    ABRC    shift, and go to state 31
    ID      shift, and go to state 8
    NUM     shift, and go to state 22

    composto_decl  go to state 45
    stmt           go to state 113
    exp_decl       go to state 49
    sel_decl       go to state 50
    it_decl        go to state 51
    retorno_decl   go to state 52
    exp            go to state 53
    var            go to state 54
    simples_exp    go to state 55
    soma_exp       go to state 56
    term           go to state 57
    fator          go to state 58
    atv            go to state 59
    num            go to state 60
    id             go to state 61


State 113

   34 sel_decl: IF ABRP exp FECP stmt ELSE stmt .

    $default  reduce using rule 34 (sel_decl)
